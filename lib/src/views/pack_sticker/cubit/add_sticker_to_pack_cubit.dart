import 'dart:convert';
import 'dart:io';
import 'dart:math';

import 'package:flutter/services.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:path_provider/path_provider.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:sticker_maker/src/views/pack_sticker/cubit/add_sticker_to_pack_state.dart';

import '../model/package_sticker_model.dart';

class AddStickerToPackCubit extends Cubit<AddStickerToPackState> {
  AddStickerToPackCubit() : super(AddStickerToPackLoading());
  bool selectedpack = false;
  List<PackSticker> listpack = [];
  List<String> listchild = [];
  String path = "assets/json/data_pack_sticker.json";

  readData() async {
    String response = await rootBundle.loadString(path);
    dynamic data = await json.decode(response) as Map;
    List<PackSticker> list = Autogenerated.fromJson(data).packSticker ?? [];
    emit(Readingdata(list: list));
  }

  createPack() async {
    final pref = await SharedPreferences.getInstance();
    PackSticker newpack =
        PackSticker(id: generateRandomString(4), status: false, stickerChild: [], title: '', urlImage: '');
    listpack.insert(0, newpack);
    dynamic listNewData = listpack.map((e) => e.toJson()).toList();
    dynamic endCodeListData = json.encode(listNewData);
    print("endcodeData ${endCodeListData}");
    // print("object after add list ${listnew}");
    await pref.setStringList('listNewData', endCodeListData);
    emit(InsertData(listchild: endCodeListData));
  }

  addToPack() async {
    final pref = await SharedPreferences.getInstance();
    final data = pref.getStringList('listNewData');
    print("data saved ${data}");
    emit(state);
  }

  saveData(List<PackSticker> pack) async {
    SharedPreferences sharedPreferences = await SharedPreferences.getInstance();
    List<String> packEncoded = pack.map((p) => jsonEncode(p.toJson())).toList();
    await sharedPreferences.setStringList('listNewData', packEncoded);
  }

  String generateRandomString(int len) {
    var r = Random();
    const _chars = 'AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz1234567890';
    return List.generate(len, (index) => _chars[r.nextInt(_chars.length)]).join();
  }

  saveImage(Uint8List bytes) async {
    final Directory? extDir = await getExternalStorageDirectory();
    String dirPath = '${extDir!.path}/Documents/pictures';
    dirPath = dirPath.replaceAll("Android/data/com.intes.sticker_maker/files/", "");
    await Directory(dirPath).create(recursive: true);
    String outputPath = '$dirPath/${DateTime.now().microsecondsSinceEpoch}.png';
    emit(AddStickerToSuccess(image: bytes));
  }
  
}
